{"ast":null,"code":"import _objectSpread from \"D:\\\\Project\\\\task4\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"D:\\\\Project\\\\task4\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"D:\\\\Project\\\\task4\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Project\\\\task4\\\\client\\\\src\\\\components\\\\TableUsers.jsx\";\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport \"antd/dist/antd.css\";\nimport { Table } from 'antd';\nimport axios from \"axios\";\nimport { AuthContext } from \"../context\";\nvar columns = [{\n  title: 'Id',\n  dataIndex: 'id'\n}, {\n  title: 'Username',\n  dataIndex: 'username'\n}, {\n  title: 'Email',\n  dataIndex: 'email'\n}, {\n  title: 'Registration date',\n  dataIndex: 'registrationdate'\n}, {\n  title: 'Last login date',\n  dataIndex: 'lastlogindate'\n}, {\n  title: 'Status',\n  dataIndex: 'status'\n}];\n\nvar TableUsers = function TableUsers(_ref) {\n  var setSelectedIds = _ref.setSelectedIds,\n      changesCount = _ref.changesCount;\n\n  var _useContext = useContext(AuthContext),\n      setIsAuth = _useContext.setIsAuth;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      users = _useState2[0],\n      setUsers = _useState2[1];\n\n  var rowSelection = {\n    onChange: function onChange(selectedRowKeys, selectedRows) {\n      setSelectedIds(selectedRowKeys);\n    },\n    getCheckboxProps: function getCheckboxProps(record) {\n      return {\n        disabled: record.name === 'Disabled User',\n        name: record.name\n      };\n    }\n  };\n\n  function getUsers() {\n    return _getUsers.apply(this, arguments);\n  }\n\n  function _getUsers() {\n    _getUsers = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var response, results;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios.get('http://localhost:3001/');\n\n            case 2:\n              response = _context.sent;\n\n              if (response.data.length > 0) {\n                results = response.data.map(function (row) {\n                  return {\n                    key: row.id,\n                    id: row.id,\n                    username: row.username,\n                    email: row.email,\n                    registrationdate: new Date(row.registrationdate).toLocaleDateString('en-US'),\n                    lastlogindate: new Date(row.lastlogindate).toLocaleDateString('en-US'),\n                    status: row.status ? 'blocked' : 'active'\n                  };\n                });\n                setUsers(results);\n              } else {\n                alert(response.data.message);\n                setIsAuth(false);\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _getUsers.apply(this, arguments);\n  }\n\n  useEffect(function () {\n    getUsers();\n  }, [changesCount]);\n  var selectionType = 'checkbox';\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    rowSelection: _objectSpread({\n      type: selectionType\n    }, rowSelection),\n    columns: columns,\n    dataSource: users,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default TableUsers;","map":{"version":3,"names":["React","useContext","useEffect","useState","Table","axios","AuthContext","columns","title","dataIndex","TableUsers","setSelectedIds","changesCount","setIsAuth","users","setUsers","rowSelection","onChange","selectedRowKeys","selectedRows","getCheckboxProps","record","disabled","name","getUsers","get","response","data","length","results","map","row","key","id","username","email","registrationdate","Date","toLocaleDateString","lastlogindate","status","alert","message","selectionType","type"],"sources":["D:/Project/task4/client/src/components/TableUsers.jsx"],"sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\r\nimport \"antd/dist/antd.css\";\r\nimport { Table } from 'antd';\r\nimport axios from \"axios\";\r\nimport {AuthContext} from \"../context\";\r\n\r\nconst columns = [\r\n    {\r\n        title: 'Id',\r\n        dataIndex: 'id'\r\n    },\r\n    {\r\n        title: 'Username',\r\n        dataIndex: 'username'\r\n    },\r\n    {\r\n        title: 'Email',\r\n        dataIndex: 'email',\r\n    },\r\n    {\r\n        title: 'Registration date',\r\n        dataIndex: 'registrationdate',\r\n    },\r\n    {\r\n        title: 'Last login date',\r\n        dataIndex: 'lastlogindate',\r\n    },\r\n    {\r\n        title: 'Status',\r\n        dataIndex: 'status',\r\n    },\r\n];\r\n\r\nconst TableUsers = ({setSelectedIds, changesCount}) => {\r\n    const {setIsAuth} = useContext(AuthContext)\r\n    const [users, setUsers] = useState([]);\r\n\r\n    const rowSelection = {\r\n        onChange: (selectedRowKeys, selectedRows) => {\r\n            setSelectedIds(selectedRowKeys);\r\n        },\r\n        getCheckboxProps: (record) => ({\r\n            disabled: record.name === 'Disabled User',\r\n            name: record.name,\r\n        }),\r\n    };\r\n\r\n\r\n    async function getUsers() {\r\n        const response = await axios.get('http://localhost:3001/')\r\n        if (response.data.length > 0){\r\n            const results= response.data.map(row => ({\r\n                key: row.id,\r\n                id: row.id,\r\n                username: row.username,\r\n                email: row.email,\r\n                registrationdate: (new Date(row.registrationdate)).toLocaleDateString('en-US'),\r\n                lastlogindate: (new Date(row.lastlogindate)).toLocaleDateString('en-US'),\r\n                status: row.status ? 'blocked' : 'active'\r\n            }))\r\n            setUsers(results);\r\n        } else {\r\n            alert(response.data.message)\r\n            setIsAuth(false);\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        getUsers();\r\n    }, [changesCount])\r\n\r\n\r\n    const selectionType = 'checkbox';\r\n\r\n    return (\r\n        <div>\r\n            <Table\r\n                rowSelection={{\r\n                    type: selectionType,\r\n                    ...rowSelection,\r\n                }}\r\n                columns={columns}\r\n                dataSource={users}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TableUsers;"],"mappings":";;;;;;;+CACA,oJ;;AADA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAqD,OAArD;AACA,OAAO,oBAAP;AACA,SAASC,KAAT,QAAsB,MAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,QAA0B,YAA1B;AAEA,IAAMC,OAAO,GAAG,CACZ;EACIC,KAAK,EAAE,IADX;EAEIC,SAAS,EAAE;AAFf,CADY,EAKZ;EACID,KAAK,EAAE,UADX;EAEIC,SAAS,EAAE;AAFf,CALY,EASZ;EACID,KAAK,EAAE,OADX;EAEIC,SAAS,EAAE;AAFf,CATY,EAaZ;EACID,KAAK,EAAE,mBADX;EAEIC,SAAS,EAAE;AAFf,CAbY,EAiBZ;EACID,KAAK,EAAE,iBADX;EAEIC,SAAS,EAAE;AAFf,CAjBY,EAqBZ;EACID,KAAK,EAAE,QADX;EAEIC,SAAS,EAAE;AAFf,CArBY,CAAhB;;AA2BA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAoC;EAAA,IAAlCC,cAAkC,QAAlCA,cAAkC;EAAA,IAAlBC,YAAkB,QAAlBA,YAAkB;;EAAA,kBAC/BX,UAAU,CAACK,WAAD,CADqB;EAAA,IAC5CO,SAD4C,eAC5CA,SAD4C;;EAAA,gBAEzBV,QAAQ,CAAC,EAAD,CAFiB;EAAA;EAAA,IAE5CW,KAF4C;EAAA,IAErCC,QAFqC;;EAInD,IAAMC,YAAY,GAAG;IACjBC,QAAQ,EAAE,kBAACC,eAAD,EAAkBC,YAAlB,EAAmC;MACzCR,cAAc,CAACO,eAAD,CAAd;IACH,CAHgB;IAIjBE,gBAAgB,EAAE,0BAACC,MAAD;MAAA,OAAa;QAC3BC,QAAQ,EAAED,MAAM,CAACE,IAAP,KAAgB,eADC;QAE3BA,IAAI,EAAEF,MAAM,CAACE;MAFc,CAAb;IAAA;EAJD,CAArB;;EAJmD,SAepCC,QAfoC;IAAA;EAAA;;EAAA;IAAA,uEAenD;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,OAC2BnB,KAAK,CAACoB,GAAN,CAAU,wBAAV,CAD3B;;YAAA;cACUC,QADV;;cAEI,IAAIA,QAAQ,CAACC,IAAT,CAAcC,MAAd,GAAuB,CAA3B,EAA6B;gBACnBC,OADmB,GACVH,QAAQ,CAACC,IAAT,CAAcG,GAAd,CAAkB,UAAAC,GAAG;kBAAA,OAAK;oBACrCC,GAAG,EAAED,GAAG,CAACE,EAD4B;oBAErCA,EAAE,EAAEF,GAAG,CAACE,EAF6B;oBAGrCC,QAAQ,EAAEH,GAAG,CAACG,QAHuB;oBAIrCC,KAAK,EAAEJ,GAAG,CAACI,KAJ0B;oBAKrCC,gBAAgB,EAAG,IAAIC,IAAJ,CAASN,GAAG,CAACK,gBAAb,CAAD,CAAiCE,kBAAjC,CAAoD,OAApD,CALmB;oBAMrCC,aAAa,EAAG,IAAIF,IAAJ,CAASN,GAAG,CAACQ,aAAb,CAAD,CAA8BD,kBAA9B,CAAiD,OAAjD,CANsB;oBAOrCE,MAAM,EAAET,GAAG,CAACS,MAAJ,GAAa,SAAb,GAAyB;kBAPI,CAAL;gBAAA,CAArB,CADU;gBAUzBzB,QAAQ,CAACc,OAAD,CAAR;cACH,CAXD,MAWO;gBACHY,KAAK,CAACf,QAAQ,CAACC,IAAT,CAAce,OAAf,CAAL;gBACA7B,SAAS,CAAC,KAAD,CAAT;cACH;;YAhBL;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAfmD;IAAA;EAAA;;EAmCnDX,SAAS,CAAC,YAAM;IACZsB,QAAQ;EACX,CAFQ,EAEN,CAACZ,YAAD,CAFM,CAAT;EAKA,IAAM+B,aAAa,GAAG,UAAtB;EAEA,oBACI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI,oBAAC,KAAD;IACI,YAAY;MACRC,IAAI,EAAED;IADE,GAEL3B,YAFK,CADhB;IAKI,OAAO,EAAET,OALb;IAMI,UAAU,EAAEO,KANhB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADJ,CADJ;AAYH,CAtDD;;AAwDA,eAAeJ,UAAf"},"metadata":{},"sourceType":"module"}