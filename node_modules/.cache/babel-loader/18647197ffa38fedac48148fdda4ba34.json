{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\task4\\\\src\\\\pages\\\\Post.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport '../styles/App.css';\nimport { usePosts } from \"../components/hooks/usePosts\";\nimport { useFetching } from \"../components/hooks/useFetching\";\nimport PostService from \"../API/PostService\";\nimport MyButton from \"../components/UI/MyButton/MyButton\";\nimport MyModal from \"../components/UI/MyModal/MyModal\";\nimport PostForm from \"../components/PostForm\";\nimport PostFilter from \"../components/PostFilter\";\nimport Loader from \"../components/Loader\";\nimport PostList from \"../components/PostList\";\nimport Pagination from \"../components/pagination/Pagination\";\nimport { usePaginator } from \"../components/hooks/usePagination\";\nimport { useObserver } from \"../components/hooks/useObserver\";\nimport MySelect from \"../components/UI/MySelect/MySelect\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Post() {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [filter, setFilter] = useState({\n    sort: '',\n    query: ''\n  });\n  const [modal, setModal] = useState(false);\n  const [totalCount, setTotalCount] = useState('');\n  const [totalPages, setTotalPages] = useState(0);\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(1);\n  const sortedAndSearchedPosts = usePosts(posts, filter.sort, filter.query);\n  const lastElement = useRef();\n  const totalPagesAll = usePaginator(totalCount, limit);\n  const [fetchPosts, isPostsLoading, postError] = useFetching(async (limit, page) => {\n    const response = await PostService.getAll(limit, page);\n    setPosts([...posts, ...response.data]);\n    setTotalCount(response.headers['x-total-count']);\n  });\n  useObserver(lastElement, page < totalPages, isPostsLoading, () => {\n    setPage(page + 1);\n  });\n  useEffect(() => {\n    fetchPosts(limit, page);\n  }, [page, limit]);\n  useEffect(() => {\n    setTotalPages(totalPagesAll);\n  }, [totalCount]);\n\n  const createPost = newPost => {\n    setPosts([...posts, newPost]);\n    setModal(false);\n  };\n\n  const removePost = post => {\n    setPosts(posts.filter(p => p.id !== post.id));\n  };\n\n  const addPost = () => {\n    setModal(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(MyButton, {\n      style: {\n        marginTop: '15px',\n        color: 'blue',\n        border: '1px solid blue'\n      },\n      onClick: addPost,\n      children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u043F\\u043E\\u0441\\u0442\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MyModal, {\n      visible: modal,\n      setVisible: setModal,\n      children: /*#__PURE__*/_jsxDEV(PostForm, {\n        create: createPost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      style: {\n        margin: '15px 0'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PostFilter, {\n      filter: filter,\n      setFilter: setFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MySelect, {\n      value: limit,\n      onChange: e => setLimit(e.target.value),\n      defaultValue: \"\\u041A\\u043E\\u043B-\\u0432\\u043E \\u044D\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442\\u043E\\u0432 \\u043D\\u0430 \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0435\",\n      options: [{\n        value: 5,\n        name: '5'\n      }, {\n        value: 10,\n        name: '10'\n      }, {\n        value: 25,\n        name: '25'\n      }, {\n        value: -1,\n        name: 'Показать все'\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), postError && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"\\u041F\\u0440\\u043E\\u0438\\u0437\\u043E\\u0448\\u043B\\u0430 \\u043E\\u0448\\u0438\\u0431\\u043A\\u0430 $\", postError]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PostList, {\n      posts: sortedAndSearchedPosts,\n      remove: removePost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: lastElement,\n      style: {\n        height: 20,\n        background: 'red'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), isPostsLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 23\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      totalCount: totalCount,\n      limit: limit,\n      page: page,\n      setPage: setPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Post, \"Ei461jo1ITQocZDYJDJtmXoaaFE=\", false, function () {\n  return [usePosts, usePaginator, useFetching, useObserver];\n});\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","useEffect","useRef","useState","usePosts","useFetching","PostService","MyButton","MyModal","PostForm","PostFilter","Loader","PostList","Pagination","usePaginator","useObserver","MySelect","Post","posts","setPosts","filter","setFilter","sort","query","modal","setModal","totalCount","setTotalCount","totalPages","setTotalPages","limit","setLimit","page","setPage","sortedAndSearchedPosts","lastElement","totalPagesAll","fetchPosts","isPostsLoading","postError","response","getAll","data","headers","createPost","newPost","removePost","post","p","id","addPost","marginTop","color","border","margin","e","target","value","name","height","background"],"sources":["D:/Project/task4/src/pages/Post.jsx"],"sourcesContent":["import React, {useEffect, useRef, useState} from \"react\";\r\nimport '../styles/App.css'\r\nimport {usePosts} from \"../components/hooks/usePosts\";\r\nimport {useFetching} from \"../components/hooks/useFetching\";\r\nimport PostService from \"../API/PostService\";\r\nimport MyButton from \"../components/UI/MyButton/MyButton\";\r\nimport MyModal from \"../components/UI/MyModal/MyModal\";\r\nimport PostForm from \"../components/PostForm\";\r\nimport PostFilter from \"../components/PostFilter\";\r\nimport Loader from \"../components/Loader\";\r\nimport PostList from \"../components/PostList\";\r\nimport Pagination from \"../components/pagination/Pagination\";\r\nimport {usePaginator} from \"../components/hooks/usePagination\";\r\nimport {useObserver} from \"../components/hooks/useObserver\";\r\nimport MySelect from \"../components/UI/MySelect/MySelect\";\r\n\r\nfunction Post() {\r\n    const [posts, setPosts] = useState([])\r\n    const [filter, setFilter] = useState({sort: '', query: ''})\r\n    const [modal, setModal] = useState(false)\r\n    const [totalCount, setTotalCount] = useState('')\r\n    const [totalPages, setTotalPages] = useState(0)\r\n    const [limit, setLimit] = useState(10)\r\n    const [page, setPage] = useState(1)\r\n    const sortedAndSearchedPosts = usePosts(posts, filter.sort, filter.query)\r\n    const lastElement = useRef()\r\n    const totalPagesAll = usePaginator(totalCount,limit)\r\n\r\n    const [fetchPosts, isPostsLoading, postError] = useFetching(async (limit, page) => {\r\n        const response = await PostService.getAll(limit, page)\r\n        setPosts([...posts, ...response.data])\r\n        setTotalCount(response.headers['x-total-count'])\r\n    })\r\n\r\n    useObserver(lastElement, page < totalPages, isPostsLoading, () => {\r\n        setPage(page + 1)\r\n    })\r\n\r\n    useEffect(() => {\r\n        fetchPosts(limit, page)\r\n    }, [page,limit])\r\n\r\n    useEffect(() => {\r\n        setTotalPages(totalPagesAll)\r\n    }, [totalCount])\r\n\r\n\r\n    const createPost = (newPost) => {\r\n        setPosts([...posts, newPost])\r\n        setModal(false);\r\n    }\r\n\r\n    const removePost = (post) => {\r\n        setPosts(posts.filter(p => p.id !== post.id))\r\n    }\r\n\r\n    const addPost = () => {\r\n        setModal(true)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <MyButton style={{marginTop: '15px', color: 'blue', border: '1px solid blue'}} onClick={addPost}>Создать пост</MyButton>\r\n            <MyModal visible={modal} setVisible={setModal}>\r\n                <PostForm create={createPost}/>\r\n            </MyModal>\r\n            <hr style={{margin:'15px 0'}}/>\r\n            <PostFilter filter={filter} setFilter={setFilter}/>\r\n            <MySelect\r\n                value={limit}\r\n                onChange={e => setLimit(e.target.value)}\r\n                defaultValue='Кол-во элементов на странице'\r\n                options={[\r\n                    {value: 5, name: '5'},\r\n                    {value: 10, name: '10'},\r\n                    {value: 25, name: '25'},\r\n                    {value: -1, name: 'Показать все'},\r\n                ]}\r\n                />\r\n            {postError &&\r\n            <h1>Произошла ошибка ${postError}</h1>\r\n            }\r\n            <PostList\r\n                posts={sortedAndSearchedPosts}\r\n                remove={removePost}\r\n            />\r\n            <div ref={lastElement} style={{height: 20, background: 'red'}}/>\r\n            {isPostsLoading &&\r\n                 <div><Loader/></div>\r\n            }\r\n            <Pagination\r\n                totalCount={totalCount}\r\n                limit={limit}\r\n                page={page}\r\n                setPage={setPage}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}